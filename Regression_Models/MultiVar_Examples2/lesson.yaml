- Class: meta
  Course: Regression_Models
  Lesson: MultiVar_Examples2
  Author: Swirl Coders
  Type: Standard
  Organization: Johns Hopkins Bloomberg School of Public Health
  Version: 2.2.0

- Class: text
  Output: This is the second lesson in which we'll look at some regression models with more than one variable. We'll begin with the InsectSprays data which we've taken the liberty to load for you. This data is part of RStudio's datasets package. It shows the effectiveness of different insect sprays. We've used the code from the slides to show you a boxplot of the data.

- Class: exact_question
  Output: How many Insect Sprays are in this dataset?
  CorrectAnswer: 6
  AnswerTests: omnitest(correctVal=6)
  Hint: How many letters are  in the sequence: A, B, C, D, E, F ?


- Class: text_question
  Output: From the boxplot, which spray has the largest median?
  CorrectAnswer: B
  AnswerTests: omnitest(correctVal='B')
  Hint: The median of each spray is indicated by the thick horizontal line in each box. Which spray has its median furthest from 0?


- Class: cmd_question
  Output: Let's first try to get a better understanding of the dataset InsectSprays. Use the R function dim to find the dimensions of the data.
  CorrectAnswer: dim(InsectSprays)
  AnswerTests: omnitest(correctExpr='dim(InsectSprays)')
  Hint: Type "dim(InsectSprays)" at the R prompt.

- Class: cmd_question
  Output: So InsectSprays is a 72 by 2 array. Use the R function head to look at the first 15 elements of InsectSprays.
  CorrectAnswer: head(InsectSprays,15)
  AnswerTests: omnitest(correctExpr='head(InsectSprays,15)')
  Hint: Type "head(InsectSprays,15)" at the R prompt.

- Class: mult_question
  Output: So this dataset contains 72 counts, each associated with a particular different spray. The counts are in the first column and a letter identifying the spray in the second. Reassuringly, the output from head matches the data shown in the displayed boxplot of the spray labeled A. From the boxplot which spray seems to have the largest overall counts?
  AnswerChoices: F; A; C; E
  CorrectAnswer: F
  AnswerTests: omnitest(correctVal='F')
  Hint: Which spray has the box associated with the largest numbers?

- Class: cmd_question
  Output: If we run the R command summary on the second column of the dataset we'll see how many entries we have for each spray. Do this now.
  CorrectAnswer: summary(InsectSprays[,2])
  AnswerTests: omnitest(correctExpr='summary(InsectSprays[,2])')
  Hint: Type "summary(InsectSprays[,2])" at the R prompt.

- Class: text
  Output: It's not surprising that with 72 counts we'd have 12 count for each of the 6 sprays. In this lesson we'll consider multilevel factor levels and how we interpret the linear models. Recall from the slides 


- Class: cmd_question
  Output: 
  CorrectAnswer: 
  AnswerTests: omnitest(correctExpr='')
  Hint: Type "" at the R prompt.

- Class: mult_question
  Output: What is the coefficient of agriculture in this new model?
  AnswerChoices: 0.19420; 60.30438; 0.07671; *
  CorrectAnswer: 0.19420
  AnswerTests: omnitest(correctVal='0.19420')
  Hint: Look at the "Estimate" column and "Agriculture" row of the summary data you just generated.


- Class: text  
  Output: The interesting point is that the sign of the Agriculture coefficient changed from negative (when all the variables were included in the model) to positive (when the model only considered Agriculture). Obviously the presence of the other factors affects the influence Agriculture has on Fertility.

- Class: mult_question
  Output: Let's consider the relationship between some of the factors. How would you expect level Education and performance on an Examination to be related?
  AnswerChoices: They would be correlated;  They would be uncorrelated; I would not be able to guess without more information
  CorrectAnswer: They would be correlated
  AnswerTests: omnitest(correctVal='They would be correlated')
  Hint: How well would you do on an exam without any class or preparation or swirl lesson?

- Class: cmd_question
  Output: Now check your intuition with the R command "cor". This computes the correlation between Examination and Education. 
  CorrectAnswer: cor(swiss$Examination,swiss$Education)
  AnswerTests: ANY_of_exprs('cor(swiss$Examination,swiss$Education)','cor(swiss$Education,swiss$Examination)')
  Hint: Type "cor(swiss$Examination,swiss$Education)" at the R prompt.

- Class: cmd_question
  Output: The correlation of .6984 shows the two are correlated. Now find the correlation between Agriculture  and Education. 
  CorrectAnswer: cor(swiss$Agriculture,swiss$Education)
  AnswerTests: ANY_of_exprs('cor(swiss$Agriculture,swiss$Education)','cor(swiss$Education,swiss$Agriculture)')
  Hint: Type "cor(swiss$Agriculture,swiss$Education)" at the R prompt.

- Class: text  
  Output: The negative correlation (-.6395) between Agriculture and Education might be affecting Agriculture's influence on Fertility. I've loaded and sourced the file swissLMs.R in your working directory. In it is a function makelms() which generates a sequence of five linear models. Each model has one more independent variable than the preceding model, so the first has just one independent variable, Agriculture, and the last has all 5. I've tried loading the source code in your editor. If I haven't done this, open the file manually so you can look at the code. 

- Class: cmd_question  
  Output: Now run the function makelms() to see how the addition of variables affects the coefficient of Agriculture in the models.
  CorrectAnswer: makelms()
  AnswerTests: omnitest(correctExpr='makelms()')
  Hint: Type "makelms()" at the R prompt.

- Class: mult_question
  Output: The addition of which variable changes the sign of Agriculture's coefficient from positive to negative?
  AnswerChoices: Education; Catholic; Examination; Infant.Mortality
  CorrectAnswer: Education
  AnswerTests: omnitest(correctVal='Education')
  Hint: The sign changes with the third model. From R code the independent variable that appears in the third call but not in the second is ?

- Class: cmd_question  
  Output: Now we'll show what happens when we add a variable that provides no new linear information to a model. Create a variable ec that is the sum of swiss$Examination and swiss$Catholic.
  CorrectAnswer: ec <- swiss$Examination+swiss$Catholic
  AnswerTests: ANY_of_exprs('ec <- swiss$Examination+swiss$Catholic','ec <- swiss$Catholic+swiss$Examination')
  Hint: Type "ec <- swiss$Examination+swiss$Catholic" at the R prompt.

- Class: cmd_question  
  Output: Now generate a new model efit with Fertility as the dependent variable and the remaining 5 of the original variables AND ec as the independent variables. Use the R shorthand ". + ec" for the righthand side of the formula.
  CorrectAnswer: efit <- lm(Fertility ~ . + ec, swiss)
  AnswerTests: creates_lm_model('efit <- lm(Fertility ~ . + ec, swiss)')
  Hint: Type "efit <- lm(Fertility ~ . + ec, swiss)" at the R prompt.

- Class: text  
  Output: We'll see that R ignores this new term since it doesn't add any information to the model.

- Class: cmd_question  
  Output: Subtract the efit coefficients from the coefficients of the first model you created, all.
  CorrectAnswer: all$coefficients - efit$coefficients
  AnswerTests: omnitest(correctExpr='all$coefficients - efit$coefficients')
  Hint: Type "all$coefficients-efit$coefficients" at the R prompt.


- Class: mult_question  
  Output:  Which is the coefficient of ec?
  AnswerChoices: NA; 0; I haven't a clue.
  CorrectAnswer: NA
  AnswerTests: omnitest(correctVal='NA')
  Hint: Since ec is a linear combination of two othe variables R ignores it so its coefficient is Not Available.

- Class: mult_question  
  Output:  This tells us that
  AnswerChoices: Adding ec doesn't change the model; Adding ec zeroes out the coefficients; R is a really cool 
  CorrectAnswer: Adding ec doesn't change the model
  AnswerTests: omnitest(correctVal='Adding ec doesn\'t change the model')
  Hint: Since ec is a linear combination of two othe variables it doesn't change the model.

- Class: text
  Output: Congrats! You've concluded this first lesson on multivariable linear models.


