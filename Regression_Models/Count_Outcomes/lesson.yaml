- Class: meta
  Course: Regression_Models
  Lesson: Count_Outcomes
  Author: Swirl Coders
  Type: Standard
  Organization: Johns Hopkins Bloomberg School of Public Health
  Version: 2.2.0

- Class: text
  Output: "Many data take the form of counts. These might be calls to a call center, number of flu cases in an area, or number of cars that cross a bridge. Data may also be in the form of rates, e.g., percent of children passing a test. In this lesson we will use Poisson regression to analyze daily visits to a web site as the web site's popularity grows, and to analyze the percent of visits which are due to references from a different site."

- Class: text
  Output: "Visits to a web site tend to occur independently, one at a time, at a certain average rate. The Poisson distribution describes random processes of this type. A Poisson process is characterized by a single parameter, the expected rate of occurrence, which is usually called lambda. In our case, lambda will be expected visits per day. Of course, as the web site becomes more popular, lambda will grow. In other words, our lambda will depend on time. We will use Poisson regression to model this dependence."

- Class: cmd_question
  Output: "Somwhat remarkably, the variance of a Poisson process has the same value as its mean, lambda. You can quickly illustrate this by generating, say, n=1000 samples from a Poisson process using R's rpois(n, lambda) and calculating the sample variance. For example, type var(rpois(1000, 50)). The sample variance won't be exactly equal to the theoretical value, of course, but it will be fairly close."  
  CorrectAnswer: 'var(rpois(1000, 50))'
  AnswerTests: expr_uses_func('var');expr_uses_func('rpois')
  Hint: Try typing var(rpois(1000, 50)).

- Class: mult_question  
  Output: "A famous theorem implies that properly normalized sums of independent, identically distributed random variables will tend to become normally distributed as the number of samples grows large. What is that theorem?"
  AnswerChoices: The Central Limit Theorem;The Gauss-Markov BLUE Theorem;The Pythagorean Theorem
  CorrectAnswer: The Central Limit Theorem
  AnswerTests: omnitest(correctVal= 'The Central Limit Theorem')
  Hint: It deals with limits.

- Class: figure
  Output: "The counts generated by a Poisson process are, strictly speaking, slightly different than the normalized sums of the Central Limit Theorem. However, the counts in a given period of time will represent sums of larger numbers of terms as lambda increases. In fact, it can be formally shown that for large lambda a Poisson distribution is well approximated by a normal. The figure illustrates this effect. It shows progression from a sparse, asymetric, Poisson probability mass function on the left, to a dense, bell-shaped curve on the right as lambda varies from 2 to 100."
  Figure: poisson_2_normal.R
  FigureType: new

- Class: figure
  Output: "In a Poisson regression, the log of lambda is assumed to be a linear function of the predictors. Since we will try to model the growth of visits to a web site, the log of lambda will be a linear function the date: log(lambda) = b0 + b1*date. This implies that the average number of hits per day, lambda, is exponential in the date: lambda = exp(b0)*exp(b1)^date. Exponential growth is also suggested by the smooth, red curve drawn though the data. Thus exp(b1) would represent the percentage by which visits grow per day."
  Figure: hits.R
  FigureType: new

- Class: video
  Output: "If you are connected to the internet right now, would you care to visit the Leek Group website?"
  VideoLink: 'http://address.of.video'

- Class: cmd_question
  Output: "Our data is in a data frame named hits. Use View(hits), head(hits), or tail(hits) to examine the data now."
  CorrectAnswer: 'View(hits)'
  AnswerTests: ANY_of_exprs('View(hits)', 'head(hits)', 'tail(hits)')
  Hint: "Type View(hits), head(hits), or tail(hits). Any of these will do."

- Class: text
  Output: "There are three columns of data labeled date, visits, and simplystats respectively. The simplystats column records the number of visits which are due to references from another site, the Simply Statistics blog. We'll come back to that column later. For now, we are interested in the date and visits columns. The date will be our predictor."

- Class: cmd_question
  Output: "Our dates are represented in terms of R's class, Date. Verify this by typing class(hits[,'date']), or something equivalent." 
  CorrectAnswer: class(hits[,'date'])
  AnswerTests: ANY_of_exprs("class(hits[,'date']", 'class(hits[,"date"])', 'class(hits[,1])'))
  Hint: Type class(hits[,'date']), class(hits[,"date"]), or class(hits[,1]).

- Class: cmd_question
  Output: "R's Date class represents dates as days since or prior to January 1, 1970. They are essentially numbers, and to some extent can be treated as such. Dates can, for example, be added or subtracted, or easily coverted to numbers. Type as.integer(head(hits[,'date'])) to see what I mean." 
  CorrectAnswer: class(hits[,'date'])
  AnswerTests: ANY_of_exprs("as.integer(head(hits[,'date'])", 'as.integer(head(hits[,"date"]))', 'as.integer(head(hits[,1])'))
  Hint: Type "as.integer(head(hits[,'date'])", 'as.integer(head(hits[,"date"]))', or 'as.integer(head(hits[,1])').

- Class: cmd_question
  Output: "The arithmetic properties of Dates allow us to use them as predictors. We'll use Poisson regression to predict log(lambda) as a linear function of date in a way which maximizes the likelihood of the counts we actually see. Our formula will be visits ~ date. Since our outcomes (visits) are counts, our family will be 'poisson', and our third argument data will be hits. Create such a model and store it in a variable called mdl using the following expression or something equivalent, mdl <- glm(visits ~ date, poisson, hits)."
  CorrectAnswer: mdl <- glm(visits ~ date, poisson, hits)
  AnswerTests: creates_glm_model('mdl <- glm(visits ~ date, poisson, hits)')
  Hint: Type mdl <- glm(visits ~ date, poisson, hits) or something equivalent.

- Class: figure
  Output: fitted values
  Figure: model_1.R
  FigureType: new

# -coefficient significance
- Class: cmd_question
  Output: summary etc.
  CorrectAnswer: EXPR or VAL
  AnswerTests: omnitest(correctExpr='EXPR', correctVal=VAL)
  Hint: hint

# -Residual plot seems to have structure--"mean variance relationship?"
# Not sure what to do here. Allowing for figure.
- Class: figure
  Output: explain the figure here
  Figure: sourcefile.R
  FigureType: new or add

# -Zero inflation
- Class: figure
  Output: explain the figure here
  Figure: sourcefile.R
  FigureType: new or add

# Second model using offset
# The simply statistics column is the count of the hits strictly from Simply Statistics.
# The lecture emphasis is rates. So he may be after the rate at which SS generates visits.
# The offset tag fixes a predictor's coefficient to 1. So he's interested in the rate per
# hit. (I would have used the overall hit rate.)
# Uses glm's parameter "offset" to model hits to Leek which come from Simply Statistics.
- Class: text
  Output: put your exposition here.

# - Visit Simply Statistics?
- Class: figure
  Output: explain the figure here
  Figure: sourcefile.R
  FigureType: new or add

# - Interpret effect of SS.
# Predicts simply stats controlling for leek group visits
# glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
#             family="poisson",data=gaData)
# Plots fitted points as blue 
# plot(julian(gaData$date),glm2$fitted,col="blue",pch=19,xlab="Date",ylab="Fitted Counts")
# Overplots 1st model's lambda's 
# points(julian(gaData$date),glm1$fitted,col="red",pch=19)
